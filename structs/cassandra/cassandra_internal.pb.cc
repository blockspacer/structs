// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: structs/cassandra/cassandra_internal.proto

#include "structs/cassandra/cassandra_internal.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace structs {
class CassandraInternalFieldDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CassandraInternalField>
      _instance;
} _CassandraInternalField_default_instance_;
class CassandraInternalMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CassandraInternalMessage>
      _instance;
} _CassandraInternalMessage_default_instance_;
class CassandraInternalMessagesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CassandraInternalMessages>
      _instance;
} _CassandraInternalMessages_default_instance_;
}  // namespace structs
namespace protobuf_structs_2fcassandra_2fcassandra_5finternal_2eproto {
void InitDefaultsCassandraInternalFieldImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::structs::_CassandraInternalField_default_instance_;
    new (ptr) ::structs::CassandraInternalField();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::structs::CassandraInternalField::InitAsDefaultInstance();
}

void InitDefaultsCassandraInternalField() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCassandraInternalFieldImpl);
}

void InitDefaultsCassandraInternalMessageImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_structs_2fcassandra_2fcassandra_5finternal_2eproto::InitDefaultsCassandraInternalField();
  {
    void* ptr = &::structs::_CassandraInternalMessage_default_instance_;
    new (ptr) ::structs::CassandraInternalMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::structs::CassandraInternalMessage::InitAsDefaultInstance();
}

void InitDefaultsCassandraInternalMessage() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCassandraInternalMessageImpl);
}

void InitDefaultsCassandraInternalMessagesImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_structs_2fcassandra_2fcassandra_5finternal_2eproto::InitDefaultsCassandraInternalMessage();
  {
    void* ptr = &::structs::_CassandraInternalMessages_default_instance_;
    new (ptr) ::structs::CassandraInternalMessages();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::structs::CassandraInternalMessages::InitAsDefaultInstance();
}

void InitDefaultsCassandraInternalMessages() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCassandraInternalMessagesImpl);
}

::google::protobuf::Metadata file_level_metadata[3];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::structs::CassandraInternalField, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::structs::CassandraInternalField, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::structs::CassandraInternalField, cassandra_type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::structs::CassandraInternalMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::structs::CassandraInternalMessage, table_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::structs::CassandraInternalMessage, fields_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::structs::CassandraInternalMessage, id_fields_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::structs::CassandraInternalMessage, pkg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::structs::CassandraInternalMessage, compaction_strategy_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::structs::CassandraInternalMessage, compression_strategy_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::structs::CassandraInternalMessage, ids_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::structs::CassandraInternalMessage, java_package_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::structs::CassandraInternalMessage, java_class_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::structs::CassandraInternalMessages, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::structs::CassandraInternalMessages, messages_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::structs::CassandraInternalField)},
  { 7, -1, sizeof(::structs::CassandraInternalMessage)},
  { 21, -1, sizeof(::structs::CassandraInternalMessages)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::structs::_CassandraInternalField_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::structs::_CassandraInternalMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::structs::_CassandraInternalMessages_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "structs/cassandra/cassandra_internal.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n*structs/cassandra/cassandra_internal.p"
      "roto\022\007structs\">\n\026CassandraInternalField\022"
      "\014\n\004name\030\001 \001(\t\022\026\n\016cassandra_type\030\002 \001(\t\"\222\002"
      "\n\030CassandraInternalMessage\022\022\n\ntable_name"
      "\030\001 \001(\t\022/\n\006fields\030\002 \003(\0132\037.structs.Cassand"
      "raInternalField\0222\n\tid_fields\030\003 \003(\0132\037.str"
      "ucts.CassandraInternalField\022\013\n\003pkg\030\004 \001(\t"
      "\022\033\n\023compaction_strategy\030\005 \001(\t\022\034\n\024compres"
      "sion_strategy\030\006 \001(\t\022\013\n\003ids\030\007 \003(\t\022\024\n\014java"
      "_package\030\010 \001(\t\022\022\n\njava_class\030\t \001(\t\"P\n\031Ca"
      "ssandraInternalMessages\0223\n\010messages\030\001 \003("
      "\0132!.structs.CassandraInternalMessageb\006pr"
      "oto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 484);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "structs/cassandra/cassandra_internal.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_structs_2fcassandra_2fcassandra_5finternal_2eproto
namespace structs {

// ===================================================================

void CassandraInternalField::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CassandraInternalField::kNameFieldNumber;
const int CassandraInternalField::kCassandraTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CassandraInternalField::CassandraInternalField()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_structs_2fcassandra_2fcassandra_5finternal_2eproto::InitDefaultsCassandraInternalField();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:structs.CassandraInternalField)
}
CassandraInternalField::CassandraInternalField(const CassandraInternalField& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  cassandra_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cassandra_type().size() > 0) {
    cassandra_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cassandra_type_);
  }
  // @@protoc_insertion_point(copy_constructor:structs.CassandraInternalField)
}

void CassandraInternalField::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cassandra_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

CassandraInternalField::~CassandraInternalField() {
  // @@protoc_insertion_point(destructor:structs.CassandraInternalField)
  SharedDtor();
}

void CassandraInternalField::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cassandra_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CassandraInternalField::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CassandraInternalField::descriptor() {
  ::protobuf_structs_2fcassandra_2fcassandra_5finternal_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_structs_2fcassandra_2fcassandra_5finternal_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CassandraInternalField& CassandraInternalField::default_instance() {
  ::protobuf_structs_2fcassandra_2fcassandra_5finternal_2eproto::InitDefaultsCassandraInternalField();
  return *internal_default_instance();
}

CassandraInternalField* CassandraInternalField::New(::google::protobuf::Arena* arena) const {
  CassandraInternalField* n = new CassandraInternalField;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CassandraInternalField::Clear() {
// @@protoc_insertion_point(message_clear_start:structs.CassandraInternalField)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cassandra_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool CassandraInternalField::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:structs.CassandraInternalField)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "structs.CassandraInternalField.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cassandra_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cassandra_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cassandra_type().data(), static_cast<int>(this->cassandra_type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "structs.CassandraInternalField.cassandra_type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:structs.CassandraInternalField)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:structs.CassandraInternalField)
  return false;
#undef DO_
}

void CassandraInternalField::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:structs.CassandraInternalField)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "structs.CassandraInternalField.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string cassandra_type = 2;
  if (this->cassandra_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cassandra_type().data(), static_cast<int>(this->cassandra_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "structs.CassandraInternalField.cassandra_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->cassandra_type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:structs.CassandraInternalField)
}

::google::protobuf::uint8* CassandraInternalField::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:structs.CassandraInternalField)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "structs.CassandraInternalField.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string cassandra_type = 2;
  if (this->cassandra_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cassandra_type().data(), static_cast<int>(this->cassandra_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "structs.CassandraInternalField.cassandra_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->cassandra_type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:structs.CassandraInternalField)
  return target;
}

size_t CassandraInternalField::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:structs.CassandraInternalField)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string cassandra_type = 2;
  if (this->cassandra_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cassandra_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CassandraInternalField::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:structs.CassandraInternalField)
  GOOGLE_DCHECK_NE(&from, this);
  const CassandraInternalField* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CassandraInternalField>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:structs.CassandraInternalField)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:structs.CassandraInternalField)
    MergeFrom(*source);
  }
}

void CassandraInternalField::MergeFrom(const CassandraInternalField& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:structs.CassandraInternalField)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.cassandra_type().size() > 0) {

    cassandra_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cassandra_type_);
  }
}

void CassandraInternalField::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:structs.CassandraInternalField)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CassandraInternalField::CopyFrom(const CassandraInternalField& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:structs.CassandraInternalField)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CassandraInternalField::IsInitialized() const {
  return true;
}

void CassandraInternalField::Swap(CassandraInternalField* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CassandraInternalField::InternalSwap(CassandraInternalField* other) {
  using std::swap;
  name_.Swap(&other->name_);
  cassandra_type_.Swap(&other->cassandra_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CassandraInternalField::GetMetadata() const {
  protobuf_structs_2fcassandra_2fcassandra_5finternal_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_structs_2fcassandra_2fcassandra_5finternal_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CassandraInternalMessage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CassandraInternalMessage::kTableNameFieldNumber;
const int CassandraInternalMessage::kFieldsFieldNumber;
const int CassandraInternalMessage::kIdFieldsFieldNumber;
const int CassandraInternalMessage::kPkgFieldNumber;
const int CassandraInternalMessage::kCompactionStrategyFieldNumber;
const int CassandraInternalMessage::kCompressionStrategyFieldNumber;
const int CassandraInternalMessage::kIdsFieldNumber;
const int CassandraInternalMessage::kJavaPackageFieldNumber;
const int CassandraInternalMessage::kJavaClassFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CassandraInternalMessage::CassandraInternalMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_structs_2fcassandra_2fcassandra_5finternal_2eproto::InitDefaultsCassandraInternalMessage();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:structs.CassandraInternalMessage)
}
CassandraInternalMessage::CassandraInternalMessage(const CassandraInternalMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      fields_(from.fields_),
      id_fields_(from.id_fields_),
      ids_(from.ids_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  table_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.table_name().size() > 0) {
    table_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.table_name_);
  }
  pkg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.pkg().size() > 0) {
    pkg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pkg_);
  }
  compaction_strategy_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.compaction_strategy().size() > 0) {
    compaction_strategy_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.compaction_strategy_);
  }
  compression_strategy_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.compression_strategy().size() > 0) {
    compression_strategy_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.compression_strategy_);
  }
  java_package_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.java_package().size() > 0) {
    java_package_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.java_package_);
  }
  java_class_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.java_class().size() > 0) {
    java_class_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.java_class_);
  }
  // @@protoc_insertion_point(copy_constructor:structs.CassandraInternalMessage)
}

void CassandraInternalMessage::SharedCtor() {
  table_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pkg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  compaction_strategy_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  compression_strategy_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  java_package_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  java_class_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

CassandraInternalMessage::~CassandraInternalMessage() {
  // @@protoc_insertion_point(destructor:structs.CassandraInternalMessage)
  SharedDtor();
}

void CassandraInternalMessage::SharedDtor() {
  table_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pkg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  compaction_strategy_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  compression_strategy_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  java_package_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  java_class_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CassandraInternalMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CassandraInternalMessage::descriptor() {
  ::protobuf_structs_2fcassandra_2fcassandra_5finternal_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_structs_2fcassandra_2fcassandra_5finternal_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CassandraInternalMessage& CassandraInternalMessage::default_instance() {
  ::protobuf_structs_2fcassandra_2fcassandra_5finternal_2eproto::InitDefaultsCassandraInternalMessage();
  return *internal_default_instance();
}

CassandraInternalMessage* CassandraInternalMessage::New(::google::protobuf::Arena* arena) const {
  CassandraInternalMessage* n = new CassandraInternalMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CassandraInternalMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:structs.CassandraInternalMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  fields_.Clear();
  id_fields_.Clear();
  ids_.Clear();
  table_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pkg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  compaction_strategy_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  compression_strategy_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  java_package_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  java_class_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool CassandraInternalMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:structs.CassandraInternalMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string table_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_table_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->table_name().data(), static_cast<int>(this->table_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "structs.CassandraInternalMessage.table_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .structs.CassandraInternalField fields = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_fields()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .structs.CassandraInternalField id_fields = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_id_fields()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string pkg = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pkg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->pkg().data(), static_cast<int>(this->pkg().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "structs.CassandraInternalMessage.pkg"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string compaction_strategy = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_compaction_strategy()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->compaction_strategy().data(), static_cast<int>(this->compaction_strategy().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "structs.CassandraInternalMessage.compaction_strategy"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string compression_strategy = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_compression_strategy()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->compression_strategy().data(), static_cast<int>(this->compression_strategy().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "structs.CassandraInternalMessage.compression_strategy"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string ids = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_ids()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ids(this->ids_size() - 1).data(),
            static_cast<int>(this->ids(this->ids_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "structs.CassandraInternalMessage.ids"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string java_package = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_java_package()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->java_package().data(), static_cast<int>(this->java_package().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "structs.CassandraInternalMessage.java_package"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string java_class = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_java_class()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->java_class().data(), static_cast<int>(this->java_class().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "structs.CassandraInternalMessage.java_class"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:structs.CassandraInternalMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:structs.CassandraInternalMessage)
  return false;
#undef DO_
}

void CassandraInternalMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:structs.CassandraInternalMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string table_name = 1;
  if (this->table_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->table_name().data(), static_cast<int>(this->table_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "structs.CassandraInternalMessage.table_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->table_name(), output);
  }

  // repeated .structs.CassandraInternalField fields = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->fields_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->fields(static_cast<int>(i)), output);
  }

  // repeated .structs.CassandraInternalField id_fields = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->id_fields_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->id_fields(static_cast<int>(i)), output);
  }

  // string pkg = 4;
  if (this->pkg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pkg().data(), static_cast<int>(this->pkg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "structs.CassandraInternalMessage.pkg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->pkg(), output);
  }

  // string compaction_strategy = 5;
  if (this->compaction_strategy().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->compaction_strategy().data(), static_cast<int>(this->compaction_strategy().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "structs.CassandraInternalMessage.compaction_strategy");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->compaction_strategy(), output);
  }

  // string compression_strategy = 6;
  if (this->compression_strategy().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->compression_strategy().data(), static_cast<int>(this->compression_strategy().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "structs.CassandraInternalMessage.compression_strategy");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->compression_strategy(), output);
  }

  // repeated string ids = 7;
  for (int i = 0, n = this->ids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ids(i).data(), static_cast<int>(this->ids(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "structs.CassandraInternalMessage.ids");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->ids(i), output);
  }

  // string java_package = 8;
  if (this->java_package().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->java_package().data(), static_cast<int>(this->java_package().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "structs.CassandraInternalMessage.java_package");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->java_package(), output);
  }

  // string java_class = 9;
  if (this->java_class().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->java_class().data(), static_cast<int>(this->java_class().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "structs.CassandraInternalMessage.java_class");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->java_class(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:structs.CassandraInternalMessage)
}

::google::protobuf::uint8* CassandraInternalMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:structs.CassandraInternalMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string table_name = 1;
  if (this->table_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->table_name().data(), static_cast<int>(this->table_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "structs.CassandraInternalMessage.table_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->table_name(), target);
  }

  // repeated .structs.CassandraInternalField fields = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->fields_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->fields(static_cast<int>(i)), deterministic, target);
  }

  // repeated .structs.CassandraInternalField id_fields = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->id_fields_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->id_fields(static_cast<int>(i)), deterministic, target);
  }

  // string pkg = 4;
  if (this->pkg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pkg().data(), static_cast<int>(this->pkg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "structs.CassandraInternalMessage.pkg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->pkg(), target);
  }

  // string compaction_strategy = 5;
  if (this->compaction_strategy().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->compaction_strategy().data(), static_cast<int>(this->compaction_strategy().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "structs.CassandraInternalMessage.compaction_strategy");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->compaction_strategy(), target);
  }

  // string compression_strategy = 6;
  if (this->compression_strategy().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->compression_strategy().data(), static_cast<int>(this->compression_strategy().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "structs.CassandraInternalMessage.compression_strategy");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->compression_strategy(), target);
  }

  // repeated string ids = 7;
  for (int i = 0, n = this->ids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ids(i).data(), static_cast<int>(this->ids(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "structs.CassandraInternalMessage.ids");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(7, this->ids(i), target);
  }

  // string java_package = 8;
  if (this->java_package().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->java_package().data(), static_cast<int>(this->java_package().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "structs.CassandraInternalMessage.java_package");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->java_package(), target);
  }

  // string java_class = 9;
  if (this->java_class().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->java_class().data(), static_cast<int>(this->java_class().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "structs.CassandraInternalMessage.java_class");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->java_class(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:structs.CassandraInternalMessage)
  return target;
}

size_t CassandraInternalMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:structs.CassandraInternalMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .structs.CassandraInternalField fields = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->fields_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->fields(static_cast<int>(i)));
    }
  }

  // repeated .structs.CassandraInternalField id_fields = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->id_fields_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->id_fields(static_cast<int>(i)));
    }
  }

  // repeated string ids = 7;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->ids_size());
  for (int i = 0, n = this->ids_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->ids(i));
  }

  // string table_name = 1;
  if (this->table_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->table_name());
  }

  // string pkg = 4;
  if (this->pkg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pkg());
  }

  // string compaction_strategy = 5;
  if (this->compaction_strategy().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->compaction_strategy());
  }

  // string compression_strategy = 6;
  if (this->compression_strategy().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->compression_strategy());
  }

  // string java_package = 8;
  if (this->java_package().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->java_package());
  }

  // string java_class = 9;
  if (this->java_class().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->java_class());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CassandraInternalMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:structs.CassandraInternalMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const CassandraInternalMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CassandraInternalMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:structs.CassandraInternalMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:structs.CassandraInternalMessage)
    MergeFrom(*source);
  }
}

void CassandraInternalMessage::MergeFrom(const CassandraInternalMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:structs.CassandraInternalMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  fields_.MergeFrom(from.fields_);
  id_fields_.MergeFrom(from.id_fields_);
  ids_.MergeFrom(from.ids_);
  if (from.table_name().size() > 0) {

    table_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.table_name_);
  }
  if (from.pkg().size() > 0) {

    pkg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pkg_);
  }
  if (from.compaction_strategy().size() > 0) {

    compaction_strategy_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.compaction_strategy_);
  }
  if (from.compression_strategy().size() > 0) {

    compression_strategy_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.compression_strategy_);
  }
  if (from.java_package().size() > 0) {

    java_package_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.java_package_);
  }
  if (from.java_class().size() > 0) {

    java_class_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.java_class_);
  }
}

void CassandraInternalMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:structs.CassandraInternalMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CassandraInternalMessage::CopyFrom(const CassandraInternalMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:structs.CassandraInternalMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CassandraInternalMessage::IsInitialized() const {
  return true;
}

void CassandraInternalMessage::Swap(CassandraInternalMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CassandraInternalMessage::InternalSwap(CassandraInternalMessage* other) {
  using std::swap;
  fields_.InternalSwap(&other->fields_);
  id_fields_.InternalSwap(&other->id_fields_);
  ids_.InternalSwap(&other->ids_);
  table_name_.Swap(&other->table_name_);
  pkg_.Swap(&other->pkg_);
  compaction_strategy_.Swap(&other->compaction_strategy_);
  compression_strategy_.Swap(&other->compression_strategy_);
  java_package_.Swap(&other->java_package_);
  java_class_.Swap(&other->java_class_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CassandraInternalMessage::GetMetadata() const {
  protobuf_structs_2fcassandra_2fcassandra_5finternal_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_structs_2fcassandra_2fcassandra_5finternal_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CassandraInternalMessages::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CassandraInternalMessages::kMessagesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CassandraInternalMessages::CassandraInternalMessages()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_structs_2fcassandra_2fcassandra_5finternal_2eproto::InitDefaultsCassandraInternalMessages();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:structs.CassandraInternalMessages)
}
CassandraInternalMessages::CassandraInternalMessages(const CassandraInternalMessages& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      messages_(from.messages_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:structs.CassandraInternalMessages)
}

void CassandraInternalMessages::SharedCtor() {
  _cached_size_ = 0;
}

CassandraInternalMessages::~CassandraInternalMessages() {
  // @@protoc_insertion_point(destructor:structs.CassandraInternalMessages)
  SharedDtor();
}

void CassandraInternalMessages::SharedDtor() {
}

void CassandraInternalMessages::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CassandraInternalMessages::descriptor() {
  ::protobuf_structs_2fcassandra_2fcassandra_5finternal_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_structs_2fcassandra_2fcassandra_5finternal_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CassandraInternalMessages& CassandraInternalMessages::default_instance() {
  ::protobuf_structs_2fcassandra_2fcassandra_5finternal_2eproto::InitDefaultsCassandraInternalMessages();
  return *internal_default_instance();
}

CassandraInternalMessages* CassandraInternalMessages::New(::google::protobuf::Arena* arena) const {
  CassandraInternalMessages* n = new CassandraInternalMessages;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CassandraInternalMessages::Clear() {
// @@protoc_insertion_point(message_clear_start:structs.CassandraInternalMessages)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  messages_.Clear();
  _internal_metadata_.Clear();
}

bool CassandraInternalMessages::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:structs.CassandraInternalMessages)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .structs.CassandraInternalMessage messages = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_messages()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:structs.CassandraInternalMessages)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:structs.CassandraInternalMessages)
  return false;
#undef DO_
}

void CassandraInternalMessages::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:structs.CassandraInternalMessages)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .structs.CassandraInternalMessage messages = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->messages_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->messages(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:structs.CassandraInternalMessages)
}

::google::protobuf::uint8* CassandraInternalMessages::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:structs.CassandraInternalMessages)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .structs.CassandraInternalMessage messages = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->messages_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->messages(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:structs.CassandraInternalMessages)
  return target;
}

size_t CassandraInternalMessages::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:structs.CassandraInternalMessages)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .structs.CassandraInternalMessage messages = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->messages_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->messages(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CassandraInternalMessages::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:structs.CassandraInternalMessages)
  GOOGLE_DCHECK_NE(&from, this);
  const CassandraInternalMessages* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CassandraInternalMessages>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:structs.CassandraInternalMessages)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:structs.CassandraInternalMessages)
    MergeFrom(*source);
  }
}

void CassandraInternalMessages::MergeFrom(const CassandraInternalMessages& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:structs.CassandraInternalMessages)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  messages_.MergeFrom(from.messages_);
}

void CassandraInternalMessages::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:structs.CassandraInternalMessages)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CassandraInternalMessages::CopyFrom(const CassandraInternalMessages& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:structs.CassandraInternalMessages)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CassandraInternalMessages::IsInitialized() const {
  return true;
}

void CassandraInternalMessages::Swap(CassandraInternalMessages* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CassandraInternalMessages::InternalSwap(CassandraInternalMessages* other) {
  using std::swap;
  messages_.InternalSwap(&other->messages_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CassandraInternalMessages::GetMetadata() const {
  protobuf_structs_2fcassandra_2fcassandra_5finternal_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_structs_2fcassandra_2fcassandra_5finternal_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace structs

// @@protoc_insertion_point(global_scope)
